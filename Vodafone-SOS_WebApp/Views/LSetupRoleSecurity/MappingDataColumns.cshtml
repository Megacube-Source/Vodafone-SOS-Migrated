
@{
    ViewBag.Title = "Setup Security Roles";
}


<script>

    $(document).ready(function () {
        //save return url
        $.ajax({
            data: { path: window.location.pathname },
            url: "/Home/SaveReturnPath",
            dataType: "json",
            type: "POST",
            success: function (data) {
            },
            error: function (reponse) {
                //  alert("error : " + reponse);
            }
        });

        $("#jqxgrid").on("bindingcomplete", function (event) {
            AddRowsToArray();
        });
        if ('@TempData["Message"]') {
            alert('@TempData["Message"]')
        }
        if ('@TempData["Error"]') {
            alert('@TempData["Error"]')
        }


    })

    function GetGrid(RoleId) {
       
        var Form1 = $("#frm")
        $.ajax({
            data: Form1.serialize(),
            data: { RoleId: RoleId },
            url: "/LSetupRoleSecurity/GetColumnMappingGrid",
            dataType: "json",
            type: "POST",
            success: function (data) {
                var sourcea = {
                    dataType: "json",
                    dataFields: [
                       // { name: 'LcsrdcId', type: 'string' },
                        { name: 'GaoControllerName', type: 'string' },
                        { name: 'GaoControllerMethodName', type: 'string' },
                        { name: 'flag', type: 'bool' },
                        { name: 'RoleId', type: 'string' },
                        { name: 'ObjectId', type: 'int' },
                        { name: 'Id', type: 'int' },
                      //  { name: 'DataType', type: 'string' }

                    ],
                    localdata: data
                };


                $('#jqxgrid').jqxGrid({
                    source: sourcea,
                    width: '100%',
                    autoheight: true,
                    theme: 'bootstrap',
                    sortable: true,
                    showtoolbar: true,
                    columnsresize: true,
                    columnsreorder: true,
                    editable: true,
                    //pagesize: 20,
                    //pagesizeoptions: [5, 10, 20, 50, 100, 200, 500],
                    rowdetails: true,
                    rendertoolbar: function (toolbar) {
                        var container = $('<div style="margin: 5px;"></div>');
                        toolbar.append(container);
                        var Names = $("<div style = 'margin: 10px;'><b> Assign/Unassign Objects</b></div>");
                        container.append(Names);
                    },
                    ready: function () {

                    },

                    columns: [
                         { text: 'Assign', datafield: 'flag', columntype: 'checkbox', width: '10%' },
                          { text: 'Controller', datafield: 'GaoControllerName', editable: false, width: '50%' },
                          { text: 'Action Name', datafield: 'GaoControllerMethodName', editable: false, width: '50%' },

                    ]
                });
                document.getElementById('ButtonsDiv').style.display = 'block'
                //  document.getElementById('SubmitButton').style.display = 'block' //displaysubmit button AutofillButton
            },
            error: function (reponse) {
                //  alert("error : " + reponse);
            }
        });


    }

    //This variable will store grid data in an array
    var GridData = [];
    function AddColumnDetail(Column) {
        if (Column) {
            var rowindex = $('#jqxgrid').jqxGrid('getselectedrowindex');
            if (rowindex != -1) {
                GridData[rowindex][0] = Column
            }
        }
    }

    //This method adds  items in array  same as grid rows when grid data binding is complete
    function AddRowsToArray() {
        var rows = $('#jqxgrid').jqxGrid('getrows');
        for (var i = 0; i < rows.length; i++) {
            GridData[i] = [];
           /* if (rows[i].ObjectId) {
                GridData[i][0] = rows[i].ObjectId;
            }*/
         /*   if (rows[i].RoleId) {
                GridData[i][1] = rows[i].RoleId;
            }*/
            if (rows[i].flag) {
                GridData[i][0] = rows[i].flag;
            }

            GridData[i][1] = rows[i].Id;
        }
    }




    //This function finally submits the grid data to the controller
    function checkSubmit() {
        //alert("RoleId is:" + RoleId);
        //alert(GridData.length)
       // var GridData = [];
        var count = 0;
        var rows = $('#jqxgrid').jqxGrid('getrows');
        for (var i = 0; i < rows.length; i++) {
                GridData[i] = [];
              //  GridData[i][0] = rows[i].ObjectId;
               // GridData[i][1] = rows[i].RoleId;
                GridData[i][0] = rows[i].flag;
                GridData[i][1] = rows[i].Id;
                count = count + 1;

        }

        // var newArray = GridData.filter(value => Object.keys(value).length !== 0);//This line is added to remove rows whose rows are empty in which comments is not provided or blank
        document.getElementById('model').value = GridData;
        //alert("gridData :*********************\n" + GridData);
        document.getElementById('frm').submit()
    }

    //method to get roles by companyId
    function GetRoles(CompanyId) {
        $("#RoleId").empty()
        if (CompanyId) {
            var procemessage = "<option value=null> Please wait...</option>";
            $("#RoleId").html(procemessage).show();
            var url = "/LSetupRoleSecurity/GetRolesByCompanyId/";

            $.ajax({
                url: url,
                data: { CompanyId: CompanyId },
                cache: false,
                type: "POST",
                success: function (data) {
                    if (data.length != 0) {
                        var markup = "<option value=null>-- Select Here --</option>";
                        for (var x = 0; x < data.length; x++) {
                            markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                           
                        }
                        $("#RoleId").html(markup).show();
                    } else {
                        var procemessage = "<option value=0> No Records Found..</option>";
                        $("#RoleId").html(procemessage).show();
                    }
                },
                error: function (reponse) {
                    alert("error : " + reponse);
                }
            });
        }
    }


</script>

@using (Html.BeginForm("PostGridData", "LSetupRoleSecurity", FormMethod.Post, new { id = "frm", name = "frm" }))
{
    @Html.Hidden("model")
    <div class="form-horizontal">
        <div class="form-group">
            @Html.Label("Select Company", htmlAttributes: new { @class = "control-label col-md-3 " })
            <div class="col-md-9">
                @Html.DropDownList("CompanyId", null, "-- Select Here --", new { @class = "form-control col-md-8", onchange = "GetRoles(this.value)",  @style = "width: 70%" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Select Role", htmlAttributes: new { @class = "control-label col-md-3 " })
            <div class="col-md-9">
                <select id="RoleId" name="RoleId" class="form-control"  style ="width: 70%"></select>
                &emsp;<br> <input type="button" value="Go" onclick="return GetGrid(RoleId.value)" class="btn btn-red btn-cons">
            </div>
        </div>

    </div>
}

<div style="padding:10px;" id="grid">
    <h4 class="text-danger">@ViewData["ErrorMessage"]</h4>
    <br>
    <div id="jqxgrid">

    </div>
    <div class="col-md-12 col-lg-12" id="ButtonsDiv" style="display:none;">
        <br>
        <button id="SubmitButton" onclick="checkSubmit()" class="btn btn-red btn-cons">Submit&nbsp;</button>&emsp;

    </div>
</div>




