@model Vodafone_SOS_WebApp.ViewModels.CreateViewModel
@{
    ViewBag.Title = "Index";
}
<br>
<h3>WIAM Simulator - Create</h3>
@Scripts.Render("~/bundles/jqxgridbundle")
<script type="text/javascript">
    $(document).ready(function () {
        //save return url
        $.ajax({
            data: { path: window.location.pathname },
            url: "/Home/SaveReturnPath",
            dataType: "json",
            type: "POST",
            success: function (data) {
            },
            error: function (reponse) {
                //  alert("error : " + reponse);
            }
        });
       // $('#jqxTabs').jqxTabs({ position: 'top' });
        if ('@TempData["Error"]')
        {
            alert('@TempData["Error"]')
        }

    });
    function FnSubmitForm() {
        var Form = $("#frm");
        if ($('#frm').valid()) {
            $.ajax({
                type: "POST",
                cache: false,
                data: Form.serialize(),
                url: "/WIAMSimulator/Create",
                success: function (data) {
                    if (data.SuccessMessage) {
                        alert(data.SuccessMessage);
                        window.location.reload();
                    }
                    else {
                        alert(data.ErrorMessage);
                     }
                },
                error: function (reponse) {
                    console.log(reponse);
                    // alert("error");
                }
            });
        }
    }


    function FnChangeCSS(selected) {
        //payeecode is editable now
        //if(selected == 'Payee'){
        //    document.getElementById("lblPayeeCode").classList.add("required");
        //    document.getElementById("PayeeCode").required = true;
        //}
        //else{
        // document.getElementById("lblPayeeCode").classList.remove("required");
        //    document.getElementById("PayeeCode").required = false;
        //}
    }
</script>



@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "frm", name = "frm", @encType = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <h5 style="color:maroon">  @ViewData["ErrorMessage"]</h5>
    @Html.HiddenFor(m => m.Id)

    <div class="form-horizontal" id="FrmHorizontal">


        <div class="col-md-4" style="min-height:80px">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "col-md-12 required" })
            <div class="col-md-11">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @*@Html.DropDownListFor(model => model.Email, null, "-- Select Here --", new { @class = "form-control " })*@
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-4" style="min-height:80px">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "col-md-12 " })
            <div class="col-md-11">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-4" style="min-height:80px">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "col-md-12 " })
            <div class="col-md-11">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-4" style="min-height:80px">
            @Html.LabelFor(model => model.RequesterEmail, htmlAttributes: new { @class = "col-md-12 " })
            <div class="col-md-11">
                @Html.EditorFor(model => model.RequesterEmail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RequesterEmail, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-4" style="min-height:80px">
            @Html.LabelFor(model => model.ManagerEmail, htmlAttributes: new { @class = "col-md-12 " })
            <div class="col-md-11">
                @Html.EditorFor(model => model.ManagerEmail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ManagerEmail, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-4" style="min-height:80px">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "col-md-12 " })
            <div class="col-md-11">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-4" style="min-height:80px">
            @Html.LabelFor(model => model.CompanyCode, htmlAttributes: new { @class = "col-md-12 required" })
            <div class="col-md-11">
                @Html.DropDownListFor(model => model.CompanyCode, null, "-- Select Here --", new { @class = "form-control ", style = "pointer-Events:none;background:lightgray;" })
                @Html.ValidationMessageFor(model => model.CompanyCode, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-4" style="min-height:80px">
            @Html.LabelFor(model => model.UserGroup, htmlAttributes: new { @class = "col-md-12 " })
            <div class="col-md-11">
                @Html.DropDownListFor(model => model.UserGroup, null, "-- Select Here --", new { @class = "form-control " })
                @Html.ValidationMessageFor(model => model.UserGroup, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-4" style="min-height:80px">
            @Html.LabelFor(model => model.UserType, htmlAttributes: new { @class = "col-md-12 required" })
            <div class="col-md-11">
                @Html.DropDownListFor(model => model.UserType, null, "-- Select Here --", new { @class = "form-control " @*,@onclick ="FnChangeCSS(this.value);"*@ })
                @Html.ValidationMessageFor(model => model.UserType, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-4" style="min-height:80px">
            @Html.LabelFor(model => model.IsVFADUser, htmlAttributes: new { @class = "col-md-12 required" })
            <div class="col-md-11">
                @Html.DropDownListFor(model => model.IsVFADUser, null, "-- Select Here --", new { @class = "form-control " })
                @Html.ValidationMessageFor(model => model.IsVFADUser, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-4" style="min-height:80px">
            @*@Html.LabelFor(model => model.PayeeCode, htmlAttributes: new { @class = "col-md-12" })*@
            <label id ="lblPayeeCode" class="col-md-12">Payee Code</label>
            <div class="col-md-11">
                @Html.EditorFor(model => model.PayeeCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PayeeCode, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <br>
    <div class="form-group">
        <div class="col-md-8">
            <br>
            <button type="button" class="btn btn-borderRed btn-cons" value="Back" id="bck" onclick="window.location.href = '@HttpContext.Current.Session["from"]'">Back &nbsp;</button>
            <button type="button" onclick="FnSubmitForm()" class="btn btn-red btn-cons">Submit &nbsp;</button>
        </div>
    </div>

}

            @section Scripts {
                @Scripts.Render("~/bundles/jqueryval")
            }






