@model Vodafone_SOS_WebApp.ViewModels.RWorkFlowViewModel

@{
    ViewBag.Title = "Edit";
}


<script>
    $(document).ready(function () {
        //save return url
        $.ajax({
            data: { path: window.location.pathname },
            url: "/Home/SaveReturnPath",
            dataType: "json",
            type: "POST",
            success: function (data) {
            },
            error: function (reponse) {
                //  alert("error : " + reponse);
            }
        });
       // if ('@TempData["Message"]') {
        //    alert('@TempData["Message"]')
       // }
        if ('@TempData["Error"]') {
             alert('@TempData["Error"]')
           // alert('Could not insert WorkFlow into database. Please Try again.');
        }
    })
</script>



@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "frm", name = "frm", @encType = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        
        <h4>Edit WorkFlow </h4>
        <br />
        <h4 class="text-danger">@ViewData["ErrorMessage"]</h4>
        @Html.HiddenFor(m => m.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.RwfName, htmlAttributes: new { @class = "control-label required col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RwfName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RwfName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RwfUILabel, htmlAttributes: new { @class = "control-label required col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.RwfUILabel, new { @class = "TextAreaShapeSize required form-control" })
                @Html.ValidationMessageFor(model => model.RwfUILabel, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RwfBaseTableName, htmlAttributes: new { @class = "control-label required col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.RwfBaseTableName, new { @class = "TextAreaShapeSize required form-control" })
                @Html.ValidationMessageFor(model => model.RwfBaseTableName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.RwfCRAllowed, htmlAttributes: new { @class = "control-label required col-md-2" })
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.RwfCRAllowed, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RwfCRAllowed, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.RwfCRWFName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.RwfCRWFName, new { @class = "TextAreaShapeSize form-control" })
                @Html.ValidationMessageFor(model => model.RwfCRWFName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.RwfWFType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.RwfWFType, new { @class = "TextAreaShapeSize  form-control" })
                @Html.ValidationMessageFor(model => model.RwfWFType, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="button" class="btn btn-borderRed btn-cons" onclick="window.location.href = '@HttpContext.Current.Session["from"]'">Back&nbsp;</button>
                <input type="submit" value="Save" class="btn btn-red btn-cons" />

            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
