@model Vodafone_SOS_WebApp.ViewModels.RRejectionReasonViewModel

@{
    ViewBag.Title = "Edit";
}
<script src="~/Scripts/jqxloader.js"></script>
<script>

    //This variable is defined to store value if form has any changes since it has loaded
    var isChanged = false;
    $(document).ready(function () {

        //Add JqxLoader when form is submitted to disable further clicks
        $("#jqxLoader").jqxLoader({ isModal: true, width: 200, height: 150, imagePosition: 'center' });

        //The below code checks for changes in form controls
        $('input,select,textarea').change(function () {
            isChanged = true;
        })
    })
    function FnFinalSubmit() {
        var sucess = $("#frm").validate({})
        if ($('#frm').valid()) {
            isChanged = false;
            document.getElementById('frm').submit()
        }
    }

    //This method is called when we leave this page to check if there are any changes in form
    window.onbeforeunload = function () {
        if (isChanged) {
            return "Are you sure you want to leave this page ? There are unsaved changes that will be lost"; @*window.location.href = '@HttpContext.Current.Session["from"]';*@
        }
        $('#jqxLoader').jqxLoader('open');
    }
</script>



@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "frm", name = "frm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4 class="text-danger">@ViewData["ErrorMessage"]</h4>
       @Html.HiddenFor(m=>m.RrrCompanyId)
        @Html.HiddenFor(m => m.Id)
        <div class="form-group">
            @Html.LabelFor(model => model.RrrReason, htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.RrrReason, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RrrReason, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.RrrIsActive, htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.RrrIsActive)
                @Html.ValidationMessageFor(model => model.RrrIsActive, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.RrrDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.RrrDescription, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RrrDescription, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="col-md-4">
            <button type="button" class="btn btn-borderRed btn-cons" onclick="window.location.href = '@HttpContext.Current.Session["from"]'">Back&nbsp;</button>
            <button type="button" onclick="FnFinalSubmit()" class="btn btn-red btn-cons">Save&nbsp;</button>
        </div>
    </div>
}

<div id="jqxLoader">
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

