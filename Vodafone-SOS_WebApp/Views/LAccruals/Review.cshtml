@model Vodafone_SOS_WebApp.ViewModels.LAccrualViewModel

@{
    ViewBag.Title = "Review";
}
<script src="~/Scripts/jqxloader.js"></script>
<script src="~/Scripts/ProjectScripts/ProjectScript.js"></script>@*//this script will contain methods common in different views*@
<script>

    //This variable is defined to store value if form has any changes since it has loaded
    var isChanged = false;
    var PortfolioArray = [];
    $(document).ready(function () {

        //The below code checks for changes in form controls
        $('input,select,textarea').change(function () {
            isChanged = true;
        })

          var TransactionId='@Model.Id'
        //The below code will load a grid of portfolios on this page
        var Portfoliosource = {
            dataType: "json",
            dataFields: [
                { name: 'Id', type: 'string' },
                { name: 'RcPrimaryChannel', type: 'string' },
                { name: 'LpBusinessUnit', type: 'string' },
                { name: 'RcName', type: 'string' },
                { name: 'Select', type: 'bool' },
            ],
            id: "Id",
            data: { TransactionId: TransactionId, EntityType:'LAccruals' },
            url: "/Home/GetPortfolioGridForEdit"
        };

        var PortfoliodataAdapter = new $.jqx.dataAdapter(Portfoliosource)

        $('#jqxgrid').jqxGrid({
            source: PortfoliodataAdapter,
            width: '100%',
            height:200,
            autoheight: true,
            theme: 'bootstrap',
            sortable: true,
            columnsresize: true,
            columnsreorder: true,
            altrows: true,
            pageable: false,
            filterable: true,
            showstatusbar: false,
            selectionmode: 'checkbox',
            enablebrowserselection: true,//--RS on 26th feb 2019, to make field copied
            ready: function () {

            },

            columns: [
                { text: 'Primary Channel', datafield: 'RcPrimaryChannel',width:'30%' },
                { text: 'Business Unit', datafield: 'LpBusinessUnit', width: '30%' },
                { text: 'Channel', datafield: 'RcName', width: '40%' },

            ]
        });

        $("#jqxgrid").on("bindingcomplete", function (event) {
            var GridRows = $('#jqxgrid').jqxGrid('getrows')

            for (var i = 0; i < GridRows.length; ++i) {
                if (GridRows[i].Select == true) {
                    // Number. The row's bound index.
                    $('#jqxgrid').jqxGrid('selectrow', i);
                }
            }
        });

        $('*', 'form').attr('disabled', 'disabled');
        $(':button').removeAttr('disabled')
        document.getElementById('PortfolioDiv').style.pointerEvents = 'none';


    })





</script>

@using (Html.BeginForm(null, null, FormMethod.Post, new { name = "frm", id = "frm", @encType = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">

        <div class="form-group">
            @Html.LabelFor(model => model.LaCommissionPeriod, htmlAttributes: new { @class = "control-label required col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.LaCommissionPeriod, null, "-- Select Here --", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LaCommissionPeriod, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.LaName, htmlAttributes: new { @class = "control-label required col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LaName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LaName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.LaAccrualAmount, htmlAttributes: new { @class = "control-label required col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LaAccrualAmount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LaAccrualAmount, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.WFComments, htmlAttributes: new { @class = "control-label  col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.WFComments, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.WFComments, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Attached Files", htmlAttributes: new { @class = "control-label required col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.LaDescription, new { @class = "form-control"  })
                @Html.ValidationMessageFor(model => model.LaName, "", new { @class = "text-danger" })
            </div>
        </div>

       

        <div class="form-group" id="PortfolioDiv">
            @Html.Label("Select Portfolios", htmlAttributes: new { @class = " col-md-2 required" })
            <br>
            <div class="col-md-10">
                <div id="jqxgrid"></div>
            </div>
        </div>

        <div class="form-group" id="formPage">
            <div class="col-md-10">
                <button type="button" class="btn btn-borderRed btn-cons" onclick="window.location.href = '@HttpContext.Current.Session["from"]'">Back&nbsp;</button>
                @if (ViewBag.ActionItems != null)
                {
                    @Html.Raw(ViewBag.ActionItems)
                }
            </div>

        </div>
        </div>
}
