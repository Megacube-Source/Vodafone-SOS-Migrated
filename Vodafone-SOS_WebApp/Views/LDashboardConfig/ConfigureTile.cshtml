@model Vodafone_SOS_WebApp.ViewModels.LDashboardConfigViewModel
@{
    ViewBag.Title = "Save Configuration";
}
<script src="~/Scripts/jqxloader.js"></script>
<script src="~/Scripts/globalization/globalize.js"></script>
<h4>Configure Dashboard Tile</h4>
<script type="text/javascript">
    var PortfolioCheckedIndexes = "";
    var PayeeCheckedIndexes = "";
    var KpiCheckedIndexes = "";
    var SelectedKpis = "";
    var SelectedPortfolios = "";
    var SelectedPayees = "";
    function FillGroup() {
        var val1 = $('#KpiTypeId').val();
        $.ajax({
            url: "/LDashboardConfig/GetKpiGroups",
            type: "GET",
            dataType: "JSON",
            data: { TypeId: val1},
            success: function (data) {
                if (data.length != 0) {
                    var markup = "<option value=0>-- Select Here --</option>";
                    for (var x = 0; x < data.length; x++) {
                        markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                    }
                    $("#KpiGroupId").html(markup).show();
                }
            }
        });
    }
    function FillKpiIds() {
        var val2 = $('#KpiGroupId').val();
        $.ajax({
            url: "/LDashboardConfig/GetKpiDropdown",
            type: "GET",
            dataType: "JSON",
            data: { iGroupId: val2},
            success: function (data) {
                if (data.length != 0) {
                    var markup = "<option value=0>-- Select Here --</option>";
                    for (var x = 0; x < data.length; x++) {
                        markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                    }
                    $("#KpiIds").html(markup).show();
                }
            }
        });

    }
    function SaveConfiguration()
    {
        var items = $("#listboxPayee").jqxDropDownList('getCheckedItems');
            var checkedItems = "";
            PayeeCheckedIndexes = '';
            $.each(items, function (index) {
                if (index < items.length - 1) {
                    checkedItems += this.value + ",";
                    PayeeCheckedIndexes += this.index + ",";
                }
                else {
                    checkedItems += this.value;
                    PayeeCheckedIndexes += this.index;
                }

            });
            document.getElementById('PayeeList').value = checkedItems;
            SelectedPayees = checkedItems;

        if(SelectedPayees == "")
        {
            alert('Please select Payee(s).');
            return false;
            }
        if (SelectedPortfolios == "")
        {
            alert('please select Channel(s).');
            return false;
        }
        var sucess = $("#frm").validate({})
            if ($('#frm').valid()) {
                document.getElementById('frm').submit()
            }
    }

    $(document).ready(function () {

        $.ajax({
            data: { path: window.location.pathname },
            url: "/Home/SaveReturnPath",
            dataType: "json",
            type: "POST",
            success: function (data) {},
            error: function (reponse) {}
        });
        $("#PortfolioAll").click(function () {
            if ($(this).is(':checked')) {
                $("#listboxPortfolio").jqxDropDownList('checkAll');
            }
            else {
                $("#listboxPortfolio").jqxDropDownList('uncheckAll');
           }
        });
        $("#PayeeAll").click(function () {
            if ($(this).is(':checked')) {
                $("#listboxPayee").jqxDropDownList('checkAll');
                var items = $("#listboxPayee").jqxDropDownList('getCheckedItems');
                var checkedItems = "";
                PayeeCheckedIndexes = '';
                $.each(items, function (index) {
                    if (index < items.length - 1) {
                        checkedItems += this.value + ",";
                        PayeeCheckedIndexes += this.index + ",";
                    }
                    else {
                        checkedItems += this.value;
                        PayeeCheckedIndexes += this.index;
                    }

                });
                document.getElementById('PayeeList').value = checkedItems;
                SelectedPayees = checkedItems;
            }
            else {
                $("#listboxPayee").jqxDropDownList('uncheckAll');
           }
        });
        GetPayeeListBox();//defualt binding just to show control
        var Channelsource = {
            dataType: "json",
            dataFields: [
                { name: 'Id', type: 'string' },
                { name: 'Portfolio', type: 'string' }
            ],
            id: "Id",
            url: "/LDashboardConfig/GetPortfolioForDropDown"
        };
        var ChannelAdapter = new $.jqx.dataAdapter(Channelsource)
        $("#listboxPortfolio").jqxDropDownList({ checkboxes: true, source: ChannelAdapter, displayMember: "Portfolio", valueMember: "Id", dropDownWidth: 280, placeHolder: "-- Select Here --",width:'280px' });
        $("#listboxPortfolio").on('bindingComplete', function (event) {
            //var ChannelArray = String(@Model.PortfolioIds).split(',');
            var PortfolioArray=document.getElementById('PortfolioList').value.split(',');
                for (var i = 0; i < PortfolioArray.length; ++i) {
                    $("#listboxPortfolio").jqxDropDownList('checkItem', Number(PortfolioArray[i]));
                }
        });
        /////
        PortfolioCheckedIndexes = '';
        $("#listboxPortfolio").on('checkChange', function (event) {
            var args = event.args;
            var items = $("#listboxPortfolio").jqxDropDownList('getCheckedItems');
            var checkedItems = "";
            //PortfolioCheckedIndexes = '';
            $.each(items, function (index) {
                if (index < items.length - 1) {
                    checkedItems += this.value + ",";
                    //PortfolioCheckedIndexes += this.index + ",";
                }
                else {
                    checkedItems += this.value;
                    //PortfolioCheckedIndexes += this.index;
                }

            });
            document.getElementById('PortfolioList').value = checkedItems;
            SelectedPortfolios = checkedItems;
            //GetPayeeListBox();

            //});
        });
    });
    function GetPayeeListBox()
    {
        var Portfolio=document.getElementById('PortfolioList').value

        var source1 = {
            dataType: "json",
            dataFields: [
                { name: 'Id', type: 'string' },
                { name: 'FullName', type: 'string' }
            ],
            data: { PortfolioList: Portfolio},
            id: "Id",
            url: "/LDashboardConfig/GetPayeeByPortfolioMatchingGrid"
        };
        var dataAdapter1 = new $.jqx.dataAdapter(source1)
        // Create a jqxListBox
        $("#listboxPayee").jqxDropDownList({ checkboxes: true, source: dataAdapter1, displayMember: "FullName", valueMember: "Id", dropDownWidth: 280, placeHolder: "-- Select Here --",width:'280px' });
        $("#listboxPayee").on('bindingComplete', function (event) {
            //var payeeArray = String(//atherate_Model.PayeeCodes).split(',');
            var payeeArray = document.getElementById('PayeeList').value.split(',');
            for (var i = 0; i < payeeArray.length; ++i) {
                $("#listboxPayee").jqxDropDownList('checkItem', Number(payeeArray[i]));
            }
        });
        $("#listboxPayee").on('checkChange', function (event) {
            var args = event.args;
            if (args.checked) {
                $("#Events").text("Checked: " + args.label);
            }
            else {
                $("#Events").text("Unchecked: " + args.label);
            }


        });
    }
</script>
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "frm", name = "frm" }))
{
    @Html.AntiForgeryToken()
    
    @Html.Hidden("PayeeList")
    @Html.Hidden("PortfolioList")
    <div class="form-horizontal">
        <div class="form-group">
            @Html.LabelFor(model => model.KpiTypeId, htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.KpiTypeId, null, "-- Select Here --", new { @class = "form-control ", @onchange = "FillGroup()" })
                @Html.ValidationMessageFor(model => model.KpiTypeId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.KpiGroupId, htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.KpiGroupId, null, "-- Select Here --", new { @class = "form-control ", @onchange = "FillKpiIds()" })
                @Html.ValidationMessageFor(model => model.KpiGroupId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.KpiId, htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.KpiIds, null, "-- Select Here --", new { @class = "form-control " })
                @Html.ValidationMessageFor(model => model.KpiIds, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Channel", htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                <div id="listboxPortfolio">
                </div>

            </div>
            @Html.Label("Select All", htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.CheckBox("PortfolioAll", false, new { @class = "col-md-1" })

            @*@Html.LabelFor(model => model.ChannelIds, htmlAttributes: new { @class = "control-label col-md-2 required" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.ChannelIds, null, "-- Select Here --", new { @class = "form-control " })
                    @Html.ValidationMessageFor(model => model.ChannelIds, "", new { @class = "text-danger" })
                </div>*@
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PayeeCodes, htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                <div id="listboxPayee">
                </div>
            </div>
            @Html.Label("Select All", htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.CheckBox("PayeeAll", false, new { @class = "col-md-1" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.TileLabel, htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TileLabel, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TileLabel, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-12">
            <button type="button" class="btn btn-borderRed btn-cons" onclick="window.location.href = '@HttpContext.Current.Session["from"]'">Back&nbsp;</button>
            <button type="submit" class="btn btn-red btn-cons" onclick="return SaveConfiguration();">Save Configuration&nbsp;</button>
        </div>
    </div>
}
<div id="jqxLoader">
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}





